# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- develop
- release*
- feature*


pool:
  vmImage: ubuntu-latest

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'zilis-microservices'
  azureSubscriptionNew: 'Zilis-Applications'

  #resource group
  resourceGroupName: 'Zilis-Microservices'
  resourceGroupNameNew: 'Zilis-Applications'

  # Web app name
  webAppNameDev: 'adminapp-test-zilis'
  webAppNameProd: 'AdminAppZilis'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildTest
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
  displayName: Build Test Code
  jobs:
  - job: Build
    variables:
       REACT_APP_ENV: 'test'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
      
    - task: Npm@1
      displayName: NPM Install
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: true
    - task: Npm@1
      displayName: NPM Build
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        customCommand: 'run build'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish build artifact'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/build'
        artifactName: dev
        artifactType: pipeline

- stage: DeployTest
  displayName: Deploy To Test
  dependsOn: BuildTest
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppNameDev)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscriptionNew)
              resourceGroupName: $(resourceGroupNameNew)
              appName: $(webAppNameDev)
              appType: webAppLinux
              package: '$(Pipeline.Workspace)/dev/'
              runtimeStack: 'node|14.x'

- stage: BuildProd
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
  displayName: Build Production Code
  jobs:
  - job: Build
    variables:
      REACT_APP_ENV: 'production'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - task: Npm@1
      displayName: NPM Install
      inputs:
        command: 'install'
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: true

    - task: Npm@1
      displayName: NPM Build
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        customCommand: 'run build'    

    - task: PublishPipelineArtifact@1
      displayName: 'Publish build artifact'
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)/build
        artifactName: prod
        publishLocation: pipeline

- stage: DeployProd
  displayName: Deploy to Prod Env
  dependsOn: BuildProd
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppNameProd)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroupName)
              appName: $(webAppNameProd)
              appType: webApp
              package: '$(Pipeline.Workspace)/prod/'
              runtimeStack: 'node|14.x'
